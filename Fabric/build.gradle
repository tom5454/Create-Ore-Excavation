plugins {
	id 'fabric-loom' version '1.2-SNAPSHOT'
	id 'maven-publish'
	
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven {
        name 'Shedman maven'
        url 'https://maven.shedaniel.me/'
    }

    maven {
        name 'blamejared'
        url 'https://maven.blamejared.com'
    }
    maven { url = "https://api.modrinth.com/maven" }
    maven { url = "https://mvn.devos.one/releases/" }
    maven { url = "https://mvn.devos.one/snapshots/" }
    maven { url = "https://maven.tterrag.com/" }
    maven { url = "https://jitpack.io/" }
    maven {
        url 'https://www.cursemaven.com'
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        url = "https://maven.jamieswhiteshirt.com/libs-release"
        content {
            includeGroup("com.jamieswhiteshirt")
        }
    }
    maven { url = "https://maven.terraformersmc.com/" }
    maven { url = "https://maven.cafeteria.dev/releases" }
    maven {
		name = "Ladysnake Libs"
		url = 'https://maven.ladysnake.org/releases'
	}
    maven {
        name = "ModMaven"
        url = "https://modmaven.dev"
    }
    maven {
        name = 'ParchmentMC'
        url = 'https://maven.parchmentmc.org'
    }
    maven {
        // saps.dev Maven (KubeJS and Rhino)
        url = "https://maven.saps.dev/minecraft"
        content {
            includeGroup "dev.latvian.mods"
        }
    }
    maven {
		name = "tom5454 maven"
		url = "https://raw.githubusercontent.com/tom5454/maven/main"
	}
    maven {
    	url = "http://localhost:8000"
		allowInsecureProtocol true
		content {
            includeGroup "local"
        }
	}
}

loom {
    runs {
        // This adds a new gradle task that runs the datagen API: "gradlew runDatagen"
        datagen {
            client()

            name "Data Generation"
            vmArg "-Dfabric-api.datagen"
            vmArg "-Dfabric-api.datagen.output-dir=${file("src/generated/resources")}"
            vmArg "-Dfabric-api.datagen.modid=createoreexcavation"
            vmArg "-Dporting_lib.datagen.existing_resources=${file("src/main/resources")};${file("create_resources")};${file("../CreateOreExcavation-1.19/src/platform-shared/resources")}"
        }
    }
}


dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.officialMojangMappings()
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	
	// Uncomment the following line to enable the deprecated Fabric API modules. 
	// These are included in the Fabric API production distribution and allow you to update your mod to the latest modules at a later more convenient time.

	// modImplementation "net.fabricmc.fabric-api:fabric-api-deprecated:${project.fabric_version}"
	implementation "com.electronwill.night-config:core:3.6.3"
    implementation "com.electronwill.night-config:toml:3.6.3"
	modImplementation("curse.maven:forge-config-api-port-fabric-547434:4143545")
    modImplementation(include("com.tom5454.chunkstorage:ChunkStorageFabric-119:1.0.3")) {
		exclude(group: "net.fabricmc.fabric-loader")
	}
    modImplementation("com.tterrag.registrate_fabric:Registrate:1.1.58-MC1.19.2") {
        exclude(group: "io.github.fabricators_of_create") // avoid duplicate Porting Lib
        exclude(group: "net.fabricmc")
    }
	
	modImplementation("com.terraformersmc:modmenu:4.1.2") {
        exclude(group: "net.fabricmc.fabric-api")
    }
	
	modCompileOnly("me.shedaniel:RoughlyEnoughItems-api:${project.rei_version}"){
		exclude(group: "net.fabricmc.fabric-api")
        exclude(group: "me.shedaniel.cloth")
        exclude(group: "dev.architectury")
        exclude(group: "net.fabricmc")
    }
    modCompileOnly("me.shedaniel:RoughlyEnoughItems-default-plugin:${project.rei_version}") {
       exclude(group: "net.fabricmc.fabric-api")
       exclude(group: "me.shedaniel.cloth")
       exclude(group: "dev.architectury")
       exclude(group: "net.fabricmc")
    }
    modRuntimeOnly("me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"){
        exclude(group: "net.fabricmc.fabric-api")
        exclude(group: "me.shedaniel.cloth")
        exclude(group: "dev.architectury")
        exclude(group: "net.fabricmc")
    }
    modImplementation("dev.architectury:architectury-fabric:6.2.43")
    modCompileOnly "dev.emi:emi-fabric:1.0.1+1.19.2:api"
	modLocalRuntime "dev.emi:emi-fabric:1.0.1+1.19.2"
    modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
        exclude(group: "net.fabricmc.fabric-api")
        exclude(group: "net.fabricmc")
    }
    
	// compile against the JEI API but do not include it at runtime
	modCompileOnlyApi("mezz.jei:jei-1.19.2-common-api:11.6.0.1013") {
		exclude(group: "net.fabricmc.fabric")
	}
	modCompileOnlyApi("mezz.jei:jei-1.19.2-fabric-api:11.6.0.1013") {
		exclude(group: "net.fabricmc.fabric")
	}
	// at runtime, use the full JEI jar for Fabric
	modRuntimeOnly("mezz.jei:jei-1.19.2-fabric:11.6.0.1013") {
		exclude(group: "net.fabricmc.fabric")
	}
	
	modImplementation("com.simibubi.create:create-fabric-${project.minecraft_version}:${project.create_version}+mc${project.minecraft_version}") {
		exclude(group: "net.fabricmc.fabric")
	}
	modImplementation("io.github.fabricators_of_create.Porting-Lib:Porting-Lib:$port_lib_version+$minecraft_version") {
		exclude(group: "net.fabricmc.fabric")
	}
	modImplementation("com.jozufozu.flywheel:flywheel-fabric-$flywheel_minecraft_version:$flywheel_version") {
		exclude(group: "net.fabricmc.fabric")
	}
	modImplementation("dev.latvian.mods:kubejs-fabric:1902.6.1-build.311")
	implementation "com.google.code.findbugs:jsr305:3.0.2"
}

sourceSets.main.resources { srcDir 'src/generated/resources' }
sourceSets {
	main {
		java {
			srcDir "../CreateOreExcavation-1.19/src/platform-shared/java"
		}
		resources {
			srcDir "../CreateOreExcavation-1.19/src/platform-shared/resources"
		}
	}
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
        def mavenURL = System.getProperty("mavenDir")
		if ("${mavenURL}" != "null") {
			maven {
				url = file(mavenURL)
			}
		}
    }
}